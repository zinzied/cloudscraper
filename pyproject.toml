[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cloudscraper"
version = "3.1.1"
description = "Enhanced Python library to bypass Cloudflare's anti-bot protection with cutting-edge anti-detection technologies, including TLS fingerprinting, ML optimization, and behavioral simulation."
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Zied Boughdir", email = "ziedboughdir@gmail.com"},
    {name = "VeNoMouS"}
]
maintainers = [
    {name = "Zied Boughdir", email = "ziedboughdir@gmail.com"}
]
keywords = [
    "cloudflare",
    "scraping",
    "ddos",
    "scrape",
    "webscraper",
    "anti-bot",
    "waf",
    "iuam",
    "bypass",
    "challenge",
    "tls-fingerprinting",
    "anti-detection",
    "stealth",
    "machine-learning",
    "behavioral-simulation",
    "canvas-spoofing",
    "webgl-spoofing",
    "fingerprint-resistance",
    "automation",
    "turnstile"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Security",
    "Topic :: System :: Networking",
    "Environment :: Web Environment",
    "Framework :: AsyncIO"
]
requires-python = ">=3.8"
dependencies = [
    "requests>=2.32.0",
    "requests-toolbelt>=1.0.0",
    "pyparsing>=3.2.0",
    "pyOpenSSL>=24.2.0",
    "pycryptodome>=3.23.0",
    "js2py>=0.74",
    "brotli>=1.1.0",
    "certifi>=2024.12.14",
    "aiohttp>=3.11.0",
    "asyncio-throttle>=1.0.2",
    "typing-extensions>=4.12.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.0",
    "pytest-cov>=6.0.0",
    "pytest-xdist>=3.6.0",
    "pytest-asyncio>=0.24.0",
    "black>=25.1.0",
    "isort>=5.13.0",
    "flake8>=7.1.0",
    "mypy>=1.13.0",
    "pre-commit>=4.0.0",
    "bandit[toml]>=1.8.0",
    "safety>=3.2.0",
    "ruff>=0.8.0"
]
test = [
    "pytest>=8.3.0",
    "pytest-cov>=6.0.0",
    "pytest-xdist>=3.6.0",
    "pytest-asyncio>=0.24.0",
    "responses>=0.25.0",
    "aioresponses>=0.7.8",
    "pytest-mock>=3.14.0",
    "httpx>=0.28.0"
]

[project.urls]
Homepage = "https://github.com/zinzied/cloudscraper"
Repository = "https://github.com/zinzied/cloudscraper.git"
Issues = "https://github.com/zinzied/cloudscraper/issues"
Changelog = "https://github.com/zinzied/cloudscraper/blob/master/CHANGELOG.md"

[tool.setuptools.packages.find]
include = ["cloudscraper*"]

[tool.setuptools.package-data]
cloudscraper = ["user_agent/browsers.json"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["cloudscraper"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["cloudscraper"]
omit = [
    "tests/*",
    "cloudscraper/interpreters/jsfuck.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "if 0:",
    "if __name__ == .__main__.:"
]

[tool.ruff]
line-length = 88
target-version = "py38"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B011"]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B601"]

[tool.bandit.assert_used]
skips = ["*_test.py", "test_*.py"]
